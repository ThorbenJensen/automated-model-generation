theme_bw(base_size = 8) +
scale_shape_manual("Konsumentengruppe",
values=c(15,17,16),
labels=c("Leading Lifestyles", "Mainstream", "Hedonists")) +
coord_cartesian(ylim = c(0,100)) +
ylab("Adoption share (%)") +
xlab("Year")
# vertical line
#geom_vline(xintercept=180, linetype="dotted", color="red") +
# TODO: label for product
#geom_text(aes(label=text, x=0, y=95), size=2.8, hjust=0)
#annotation_custom(my_grob)
pdf(paste(folder,innovation,".pdf",sep=""), width = 4, height = 4)
p
dev.off()
}
plot_diffusion <- function(innovation) {
dat <- data[data$innovation == innovation,] # TODO: filter here
# quartile function
median.quartile <- function(x){
out <- quantile(x, probs = c(0.25,0.5,0.75))
names(out) <- c("ymin","y","ymax")
return(out)
}
uci <- function(y){max(y)}
lci <- function(y){min(y)}
# plot product diffusion
library(ggplot2)
p <- ggplot(data=NULL, aes(x=X.step.)) +
stat_summary(data=dat, aes(y=adoption_lead), fun.data = "mean_cl_boot", size = .5, geom="line") +
stat_summary(data=dat, aes(y=adoption_main), fun.data = "mean_cl_boot", size = .5, geom="line") +
stat_summary(data=dat, aes(y=adoption_hed ), fun.data = "mean_cl_boot", size = .5, geom="line") +
stat_summary(data=dat[dat$X.step. %in% seq(0,15,by=5),], aes(y=adoption_lead),
fun.data = median.quartile,
geom = "errorbar",
width = 1,
size = .5,
color = "black") +
stat_summary(data=dat[dat$X.step. %in% seq(0,15,by=5),], aes(y=adoption_main),
fun.data = median.quartile,
geom = "errorbar",
width = 1,
size = .5,
color = "black") +
stat_summary(data=dat[dat$X.step. %in% seq(0,15,by=5),], aes(y=adoption_hed),
fun.data = median.quartile,
geom = "errorbar",
width = 1,
size = .5,
color = "black") +
stat_summary(data=dat[dat$X.step. %in% seq(5,15,by=5),], aes(y=adoption_lead, shape = "15"),
size = 2, fun.data = "mean_cl_boot", geom = "point") +
stat_summary(data=dat[dat$X.step. %in% seq(5,15,by=5),], aes(y=adoption_main, shape = "16"),
size = 2, fun.data = "mean_cl_boot", geom = "point") +
stat_summary(data=dat[dat$X.step. %in% seq(5,15,by=5),], aes(y=adoption_hed, shape = "17"),
size = 2, fun.data = "mean_cl_boot", geom = "point") +
theme_bw(base_size = 8) +
scale_shape_manual("Konsumentengruppe",
values=c(15,17,16),
labels=c("Leading Lifestyles", "Mainstream", "Hedonists")) +
coord_cartesian(ylim = c(0,100)) +
ylab("Adoption share (%)") +
xlab("Year")
# vertical line
#geom_vline(xintercept=180, linetype="dotted", color="red") +
# TODO: label for product
#geom_text(aes(label=text, x=0, y=95), size=2.8, hjust=0)
#annotation_custom(my_grob)
p
}
innovation
paste(folder,innovation,".pdf",sep="")
pdf(paste(folder,innovation,".pdf",sep=""), width = 4, height = 4)
p <- plot_diffusion(innovation)
dev.off()
plot_diffusion(innovation)
innovation
dat <- data[data$innovation == innovation,] # TODO: filter here
# quartile function
median.quartile <- function(x){
out <- quantile(x, probs = c(0.25,0.5,0.75))
names(out) <- c("ymin","y","ymax")
return(out)
}
uci <- function(y){max(y)}
lci <- function(y){min(y)}
# plot product diffusion
library(ggplot2)
p <- ggplot(data=NULL, aes(x=X.step.)) +
stat_summary(data=dat, aes(y=adoption_lead), fun.data = "mean_cl_boot", size = .5, geom="line") +
stat_summary(data=dat, aes(y=adoption_main), fun.data = "mean_cl_boot", size = .5, geom="line") +
stat_summary(data=dat, aes(y=adoption_hed ), fun.data = "mean_cl_boot", size = .5, geom="line") +
stat_summary(data=dat[dat$X.step. %in% seq(0,15,by=5),], aes(y=adoption_lead),
fun.data = median.quartile,
geom = "errorbar",
width = 1,
size = .5,
color = "black") +
stat_summary(data=dat[dat$X.step. %in% seq(0,15,by=5),], aes(y=adoption_main),
fun.data = median.quartile,
geom = "errorbar",
width = 1,
size = .5,
color = "black") +
stat_summary(data=dat[dat$X.step. %in% seq(0,15,by=5),], aes(y=adoption_hed),
fun.data = median.quartile,
geom = "errorbar",
width = 1,
size = .5,
color = "black") +
stat_summary(data=dat[dat$X.step. %in% seq(5,15,by=5),], aes(y=adoption_lead, shape = "15"),
size = 2, fun.data = "mean_cl_boot", geom = "point") +
stat_summary(data=dat[dat$X.step. %in% seq(5,15,by=5),], aes(y=adoption_main, shape = "16"),
size = 2, fun.data = "mean_cl_boot", geom = "point") +
stat_summary(data=dat[dat$X.step. %in% seq(5,15,by=5),], aes(y=adoption_hed, shape = "17"),
size = 2, fun.data = "mean_cl_boot", geom = "point") +
theme_bw(base_size = 8) +
scale_shape_manual("Konsumentengruppe",
values=c(15,17,16),
labels=c("Leading Lifestyles", "Mainstream", "Hedonists")) +
coord_cartesian(ylim = c(0,100)) +
ylab("Adoption share (%)") +
xlab("Year")
# vertical line
#geom_vline(xintercept=180, linetype="dotted", color="red") +
# TODO: label for product
#geom_text(aes(label=text, x=0, y=95), size=2.8, hjust=0)
#annotation_custom(my_grob)
p
data
data[data$innovation == innovation,]
data$innovation
data$innovation == innovation
View(data)
innovation
data$innovation == innovation
innovation <- showerhead
innovation <- "showerhead"
data$innovation == innovation
data$innovation
device
device <- showerhead
device <- "showerhead"
data$innovation == device
as.character(data$innovation) == device
data$innovation
unique(data$innovation)
unique(as.character(data$innovation))
innovations <- c("\"showerhead\"", "\"co2_meter\"")
innovation <- innovations[1]
innovation
data$innovation == device
data$innovation == innovation
# iterate over all innovations
plot_diffusion <- function(innovation) {
# select observations on the right innovation
dat <- data[data$innovation == innovation,]
# quartile function
median.quartile <- function(x){
out <- quantile(x, probs = c(0.25,0.5,0.75))
names(out) <- c("ymin","y","ymax")
return(out)
}
uci <- function(y){max(y)}
lci <- function(y){min(y)}
# plot product diffusion
library(ggplot2)
p <- ggplot(data=NULL, aes(x=X.step.)) +
stat_summary(data=dat, aes(y=adoption_lead), fun.data = "mean_cl_boot", size = .5, geom="line") +
stat_summary(data=dat, aes(y=adoption_main), fun.data = "mean_cl_boot", size = .5, geom="line") +
stat_summary(data=dat, aes(y=adoption_hed ), fun.data = "mean_cl_boot", size = .5, geom="line") +
stat_summary(data=dat[dat$X.step. %in% seq(0,15,by=5),], aes(y=adoption_lead),
fun.data = median.quartile,
geom = "errorbar",
width = 1,
size = .5,
color = "black") +
stat_summary(data=dat[dat$X.step. %in% seq(0,15,by=5),], aes(y=adoption_main),
fun.data = median.quartile,
geom = "errorbar",
width = 1,
size = .5,
color = "black") +
stat_summary(data=dat[dat$X.step. %in% seq(0,15,by=5),], aes(y=adoption_hed),
fun.data = median.quartile,
geom = "errorbar",
width = 1,
size = .5,
color = "black") +
stat_summary(data=dat[dat$X.step. %in% seq(5,15,by=5),], aes(y=adoption_lead, shape = "15"),
size = 2, fun.data = "mean_cl_boot", geom = "point") +
stat_summary(data=dat[dat$X.step. %in% seq(5,15,by=5),], aes(y=adoption_main, shape = "16"),
size = 2, fun.data = "mean_cl_boot", geom = "point") +
stat_summary(data=dat[dat$X.step. %in% seq(5,15,by=5),], aes(y=adoption_hed, shape = "17"),
size = 2, fun.data = "mean_cl_boot", geom = "point") +
theme_bw(base_size = 8) +
scale_shape_manual("Konsumentengruppe",
values=c(15,17,16),
labels=c("Leading Lifestyles", "Mainstream", "Hedonists")) +
coord_cartesian(ylim = c(0,100)) +
ylab("Adoption share (%)") +
xlab("Year")
# vertical line
#geom_vline(xintercept=180, linetype="dotted", color="red") +
# TODO: label for product
#geom_text(aes(label=text, x=0, y=95), size=2.8, hjust=0)
#annotation_custom(my_grob)
p
}
for (innovation in innovations) {
pdf(paste(folder,innovation,".pdf",sep=""), width = 4, height = 4)
p <- plot_diffusion(innovation)
dev.off()
}
plot_diffusion(innovation)
for (innovation in innovations) {
pdf(paste(folder,innovation,".pdf",sep=""), width = 4, height = 4)
plot_diffusion(innovation)
dev.off()
}
plot_diffusion(innovation)
data$innovations
data$innovation
gsub("\"", "", data$innovation)
gsub("\"", "", data$innovation)[1]
data$innovation[1]
as.character(data$innovation)[1]
data$innovation <- gsub("\"", "", data$innovation)
as.character(data$innovation)[1]
innovations <- c("showerhead", "co2_meter")
folder <- "/Users/thorbenje/phd/supervision/schwarz_tpb/output/"
file <- "schwarz_tpb compare_products_continuous-table.csv"
# load data from file
data <- read.csv(paste(folder, file, sep=""), skip = 6)
# remove inverted commas from 'innovation' column
data$innovation <- gsub("\"", "", data$innovation)
# rename colnames
names(data)[24] <- "adoption"
names(data)[25] <- "adoption_lead"
names(data)[26] <- "adoption_main"
names(data)[27] <- "adoption_hed"
# transform ratio of adoption to percentage
data[,24] <- data[,24] * 100
data[,25] <- data[,25] * 100
data[,26] <- data[,26] * 100
data[,27] <- data[,27] * 100
# transform from months to years
data$X.step. <- data$X.step. / 12
# show result
head(data, 6)
# iterate over all innovations
plot_diffusion <- function(innovation) {
# select observations on the right innovation
dat <- data[data$innovation == innovation,]
# quartile function
median.quartile <- function(x){
out <- quantile(x, probs = c(0.25,0.5,0.75))
names(out) <- c("ymin","y","ymax")
return(out)
}
uci <- function(y){max(y)}
lci <- function(y){min(y)}
# plot product diffusion
library(ggplot2)
p <- ggplot(data=NULL, aes(x=X.step.)) +
stat_summary(data=dat, aes(y=adoption_lead), fun.data = "mean_cl_boot", size = .5, geom="line") +
stat_summary(data=dat, aes(y=adoption_main), fun.data = "mean_cl_boot", size = .5, geom="line") +
stat_summary(data=dat, aes(y=adoption_hed ), fun.data = "mean_cl_boot", size = .5, geom="line") +
stat_summary(data=dat[dat$X.step. %in% seq(0,15,by=5),], aes(y=adoption_lead),
fun.data = median.quartile,
geom = "errorbar",
width = 1,
size = .5,
color = "black") +
stat_summary(data=dat[dat$X.step. %in% seq(0,15,by=5),], aes(y=adoption_main),
fun.data = median.quartile,
geom = "errorbar",
width = 1,
size = .5,
color = "black") +
stat_summary(data=dat[dat$X.step. %in% seq(0,15,by=5),], aes(y=adoption_hed),
fun.data = median.quartile,
geom = "errorbar",
width = 1,
size = .5,
color = "black") +
stat_summary(data=dat[dat$X.step. %in% seq(5,15,by=5),], aes(y=adoption_lead, shape = "15"),
size = 2, fun.data = "mean_cl_boot", geom = "point") +
stat_summary(data=dat[dat$X.step. %in% seq(5,15,by=5),], aes(y=adoption_main, shape = "16"),
size = 2, fun.data = "mean_cl_boot", geom = "point") +
stat_summary(data=dat[dat$X.step. %in% seq(5,15,by=5),], aes(y=adoption_hed, shape = "17"),
size = 2, fun.data = "mean_cl_boot", geom = "point") +
theme_bw(base_size = 8) +
scale_shape_manual("Konsumentengruppe",
values=c(15,17,16),
labels=c("Leading Lifestyles", "Mainstream", "Hedonists")) +
coord_cartesian(ylim = c(0,100)) +
ylab("Adoption share (%)") +
xlab("Year")
# vertical line
#geom_vline(xintercept=180, linetype="dotted", color="red") +
# TODO: label for product
#geom_text(aes(label=text, x=0, y=95), size=2.8, hjust=0)
#annotation_custom(my_grob)
p
}
innovation
innovation <- "co2_meter"
plot_diffusion(innovation)
pdf(paste(folder,innovation,".pdf",sep=""), width = 4, height = 4)
plot_diffusion(innovation)
dev.off()
for (innovation in innovations) {
pdf(paste(folder,innovation,".pdf",sep=""), width = 4, height = 4)
plot_diffusion(innovation)
dev.off()
}
library(lattice)
library(lattice)
for (innovation in innovations) {
pdf(paste(folder,innovation,".pdf",sep=""), width = 4, height = 4)
plot_diffusion(innovation)
dev.off()
}
for (innovation in innovations) {
pdf(paste(folder,innovation,".pdf",sep=""), width = 4, height = 4)
print(plot_diffusion(innovation))
dev.off()
}
source('~/.active-rstudio-document', echo=TRUE)
for (innovation in innovations) {
#pdf(paste(folder,innovation,".pdf",sep=""), width = 4, height = 4)  # desclare where to save file (will be saved in folder defined above)
print(plot_diffusion(innovation))                                   # make plot
#dev.off()                                                           # save file
}
source('~/.active-rstudio-document', echo=TRUE)
1 + 2
# define which technologies to plot and from what NetLogo output data
innovations <- c("showerhead", "co2_meter")                       # innovations that to be plotted
innovations
innovations[1]
innovations[2]
length(innovations)
innovations <- c("showerhead", "co2_meter")
innovations <- c("showerhead", "co2_meter")                       # innovations that to be plotted
folder <- "/Users/thorbenje/phd/supervision/schwarz_tpb/output/"  # folder of NetLogo output
file <- "schwarz_tpb compare_products_continuous-table.csv"       # filename of NetLogo output
# define which technologies to plot and from what NetLogo output data
innovations <- c("showerhead", "co2_meter")                       # innovations that to be plotted
folder <- "/Users/thorbenje/phd/supervision/schwarz_tpb/output/"  # folder of NetLogo output
file <- "schwarz_tpb compare_products_continuous-table.csv"       # filename of NetLogo output
# define which technologies to plot and from what NetLogo output data
innovations <- c("showerhead", "co2_meter")                       # innovations that to be plotted
folder <- "/Users/thorbenje/phd/supervision/schwarz_tpb/output/"  # folder of NetLogo output
file <- "schwarz_tpb compare_products_continuous-table.csv"       # filename of NetLogo output
# define which technologies to plot and from what NetLogo output data
innovations <- c("showerhead", "co2_meter")                       # innovations that to be plotted
folder <- "/Users/thorbenje/phd/supervision/schwarz_tpb/output/"  # folder of NetLogo output
file <- "schwarz_tpb compare_products_continuous-table.csv"       # filename of NetLogo output
1 + 2
1 + 2
1 + 2
# define which technologies to plot and from what NetLogo output data
innovations <- c("showerhead", "co2_meter")                       # innovations that to be plotted
folder <- "/Users/thorbenje/phd/supervision/schwarz_tpb/output/"  # folder of NetLogo output
file <- "schwarz_tpb compare_products_continuous-table.csv"       # filename of NetLogo output
data <- read.csv(paste(folder, file, sep=""), skip = 6)
View(data)
data <- read.csv(paste(folder, file, sep=""), skip = 6)
names(data)
data$innovation
unique(data$innovation)
gsub("\"", "", data$innovation)
data$innovation <- gsub("\"", "", data$innovation)
names(data)
names(data)[24]
names(data)[24] <- "adoption"
names(data)[24]
names(data)
names(data)[25] <- "adoption_lead"
names(data)[26] <- "adoption_main"
names(data)[27] <- "adoption_hed"
View(data)
data[,24]
data[,24]
data[,24] * 100
data[,24] <- data[,24] * 100
data[,25] <- data[,25] * 100
data[,26] <- data[,26] * 100
data[,27] <- data[,27] * 100
data$X.step.
data$X.step. <- data$X.step. / 12
View(data)
# load data from file
data <- read.csv(paste(folder, file, sep=""), skip = 6)
# remove inverted commas from 'innovation' column
data$innovation <- gsub("\"", "", data$innovation)
# rename colnames
names(data)[24] <- "adoption"
names(data)[25] <- "adoption_lead"
names(data)[26] <- "adoption_main"
names(data)[27] <- "adoption_hed"
# transform ratio of adoption to percentage
data[,24] <- data[,24] * 100
data[,25] <- data[,25] * 100
data[,26] <- data[,26] * 100
data[,27] <- data[,27] * 100
# transform from months to years
data$X.step. <- data$X.step. / 12
# show result
head(data, 6)
library(lattice)
library(ggplot2)
# required libraries
library(lattice)
library(ggplot2)
plot_diffusion <- function(innovation) {
# select observations on the right innovation
dat <- data[data$innovation == innovation,]
# quartile function
median.quartile <- function(x){
out <- quantile(x, probs = c(0.25,0.5,0.75))
names(out) <- c("ymin","y","ymax")
return(out)
}
uci <- function(y){max(y)}
lci <- function(y){min(y)}
# plot product diffusion
p <- ggplot(data=NULL, aes(x=X.step.)) +
stat_summary(data=dat, aes(y=adoption_lead), fun.data = "mean_cl_boot", size = .5, geom="line") +
stat_summary(data=dat, aes(y=adoption_main), fun.data = "mean_cl_boot", size = .5, geom="line") +
stat_summary(data=dat, aes(y=adoption_hed ), fun.data = "mean_cl_boot", size = .5, geom="line") +
stat_summary(data=dat[dat$X.step. %in% seq(0,15,by=5),], aes(y=adoption_lead),
fun.data = median.quartile,
geom = "errorbar",
width = 1,
size = .5,
color = "black") +
stat_summary(data=dat[dat$X.step. %in% seq(0,15,by=5),], aes(y=adoption_main),
fun.data = median.quartile,
geom = "errorbar",
width = 1,
size = .5,
color = "black") +
stat_summary(data=dat[dat$X.step. %in% seq(0,15,by=5),], aes(y=adoption_hed),
fun.data = median.quartile,
geom = "errorbar",
width = 1,
size = .5,
color = "black") +
stat_summary(data=dat[dat$X.step. %in% seq(5,15,by=5),], aes(y=adoption_lead, shape = "15"),
size = 2, fun.data = "mean_cl_boot", geom = "point") +
stat_summary(data=dat[dat$X.step. %in% seq(5,15,by=5),], aes(y=adoption_main, shape = "16"),
size = 2, fun.data = "mean_cl_boot", geom = "point") +
stat_summary(data=dat[dat$X.step. %in% seq(5,15,by=5),], aes(y=adoption_hed, shape = "17"),
size = 2, fun.data = "mean_cl_boot", geom = "point") +
theme_bw(base_size = 8) +
scale_shape_manual("Konsumentengruppe",
values=c(15,17,16),
labels=c("Leading Lifestyles", "Mainstream", "Hedonists")) +
coord_cartesian(ylim = c(0,100)) +
ylab("Adoption share (%)") +
xlab("Year")
#geom_text(aes(label=innovation, x=0, y=95), size=2.8, hjust=0)
p # return plot (now in variable p)
}
innovations
for (innovation in innovations) {
#pdf(paste(folder,innovation,".pdf",sep=""), width = 4, height = 4)  # desclare where to save file (will be saved in folder defined above)
print(plot_diffusion(innovation))                                   # make plot
#dev.off()                                                           # save file
}
source('~/.active-rstudio-document', echo=TRUE)
# model <- "schwarz_alternative_womtrue"
for( model in models) {
print("")
print(paste("INVERSE MODELING RESULTS FOR MODEL '",model,"' (EXLUDING ZERO-LINE):",sep=""))
model_dat <- read.csv(paste(model,".objectiveFunctionHistory.csv",sep=""))
model_dat <- model_dat[model_dat$fitness != 29.58, ]
print(model_dat[ order(model_dat$fitness ),][1,])
print("")
}
setwd("/Users/thorbenje/phd/models/chapter4/output/")
# model <- "schwarz"
for( model in models) {
print("")
print(paste("INVERSE MODELING RESULTS FOR MODEL '",model,"':",sep=""))
model_dat <- read.csv(paste(model,".objectiveFunctionHistory.csv",sep=""))
print(paste("Best fit of model:",              min(model_dat$fitness)))
print(model_dat[ order(model_dat$fitness ),][1,])
print("")
}
setwd("/Users/thorbenje/phd/models/chapter4/")
netlogo_path <- '/Users/thorbenje/bin/netlogo-5.0.5/behaviorsearch/behaviorsearch_headless.sh'
schwarz_womfalse <- "schwarz_womfalse"
schwarz_womtrue <- "schwarz_womtrue"
schwarz_alternative_womfalse <- "schwarz_alternative_womfalse"
schwarz_alternative_womtrue <- "schwarz_alternative_womtrue"
# choose models and search effort
models <- c(schwarz_womfalse, schwarz_womtrue, schwarz_alternative_womfalse, schwarz_alternative_womtrue)
number_searches <- 50
# INFO: ca. 6 minutes per search (with 4 models)
setwd("/Users/thorbenje/phd/models/chapter4/output/")
# model <- "schwarz"
for( model in models) {
print("")
print(paste("INVERSE MODELING RESULTS FOR MODEL '",model,"':",sep=""))
model_dat <- read.csv(paste(model,".objectiveFunctionHistory.csv",sep=""))
print(paste("Best fit of model:",              min(model_dat$fitness)))
print(model_dat[ order(model_dat$fitness ),][1,])
print("")
}
